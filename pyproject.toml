[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bbcli"
version = "0.1.0"
description = "A command-line interface for interacting with the Bitbucket API"
requires-python = ">=3.8"
dependencies = [
    "click>=8.0.0",
    "requests>=2.25.0",
    "keyring>=23.0.0",
    "pyyaml>=6.0",
    "rich>=12.0.0",
    "cryptography>=3.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "isort>=5.10.0",
    "ruff>=0.11.11",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]

[project.scripts]
bbcli = "bbcli.main:cli"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 130
known_first_party = ["bbcli"]

[tool.mypy]
python_version = "3.12"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
# Start with basic checks and gradually increase strictness
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true
# Allow untyped calls for now (Click decorators)
disallow_untyped_calls = false
# Allow untyped decorators (Click)
disallow_untyped_decorators = false
# Ignore missing imports for third-party libraries
ignore_missing_imports = true

# Per-module configuration
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "bbcli.cli.*"
# CLI modules use Click decorators which are untyped
disallow_untyped_decorators = false
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=bbcli",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[dependency-groups]
dev = [
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.4.8",
    "types-PyYAML",
    "types-requests",
]

[tool.ruff]
line-length = 130

# Exclude directories
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    ".pytest_cache",
    ".mypy_cache",
    "htmlcov",
    "dist",
    "build",
    ".eggs",
    "*.egg-info",
]

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    # "I",   # isort (disabled to avoid conflict with isort tool)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]

# Ignore specific rules, include the reason
ignore = [
    # "T201",   # print found (we use print for CLI output)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",
    "S105",
    "S106",
    "N803",
    "ARG001",
    "ARG002",
    "F841",
    "SIM117",
    "B007",
]
# CLI modules can use print statements
"src/bbcli/cli/*" = ["T201"]
"src/bbcli/main.py" = ["T201"]
# HTTP handlers must use standard library method names (do_GET, do_POST, etc.)
"src/bbcli/cli/auth.py" = ["N802"]
"src/bbcli/cli/oauth_auth.py" = ["N802"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601", "B603", "B607"]
